# General settings
general:
  # Default: English (en-US) - no download required.
  # You can access translations maintained by the community in our Discord: https://discord.gg/B4MAJVk
  # To access translations, other than en-US, execute /translations in the Discord server.
  language: 'en-US'
  # Worlds where players should be able to place upgradeable spawners.
  # Use '*' to allow every world.
  worlds_list:
    - 'world'
    - 'world_nether'
    - 'world_the_end'

  # Set the format of all economy related displays.
  # NOTE: This setting requires server reload / restart.
  eco-format: '$#,##0.00'


# General Teleportation Settings
# Command specific teleportation options can be find in their sections.
teleport:
  # Set the cost of any teleportation to 0 for players that joined the server for the first time.
  # You can define a time span here. Example: 1d = players that joined the server 23 hours ago, won't pay for any teleportation.
  first-join_time: 0h
  # Waittime
  # Timeunit: seconds
  wait: 5


# Database settings
database:
  # MySQL
  mysql:
    # Enable this to use MySQL instead of "file based"
    # SQLite. For performance improvement it's recommended to
    # use MySQL. If you don't have access to a MySQL server,
    # just let this disabled (false).
    enabled: false
    ip-address: 'localhost'
    port: '3306'
    database: 'upgradeablespawners'
    table-prefix: ''
    user: 'minecraft'
    password: 'password'


command:
  # Should players need to confirm their purchase at /Spawner get?
  get-confirm: true
  # Set aliases
  # for /UpgradeableSpawners command
  # NOTE: This settings
  # requires /reload
  alias:
    upgradeablespawners_list:
      - 'uspawners'
      - 'uspawner'
      - 'spawners'
      - 'spawner'


# Spawner Settings
spawner:
  # Allow only the owner
  # of the spawner item
  # to place it down.
  only-owner: false
  # Should a spawner always spawn entities? That means that there are no spawn conditions, except the levels from levels.yml (except player_range).
  # All spawners will be able to spawn in air and underwater. There are no restrictions.
  # NOTE: This option required server reload / restart.
  no-conditions: false
  # Should all players be able to break spawners that aren't protected by any claiming plugin?
  # The player who broke the spawners will be set as the new owner of the spawner item.
  # NOTE: The owner of the spawner can always delete / break their spawners.
  # NOTE: This setting requires server reload / restart.
  visitor-break: true
  # Allow changing the entity type of upgradeable spawner?
  # If you also want to disable eggs, make sure to disable the setting below (vanilla.egg).
  # You can also disable specific items in the GUI menu by adding enabled: false to the item configuration in the GUI language file.
  entity-change: true
  # Should spawners only be able to be mineable with a silktouch pickaxe?
  # NOTE: If enabled, players still need the uspawners.silktouch permission to mine the spawners. Players with the uspawners.bypass.delete permission can bypass this and mine it without any pickaxe.
  # If disabled, players can delete and get the spawner by using shift plus left click.
  silktouch:
    enabled_5: true
    # Set the required minimum silktouch level.
    min-level: 1
    # Also allow the mining of vanilla spawners?
    # NOTE: If the vanilla spawner convert option is enabled, then this setting won't have any influence as
    # vanilla spawners will be converted into uspawners upon interaction.
    # NOTE: If you want mined vanilla spawners be converted into uspawners, you need to enable option "enabled_2" below.
    vanilla_2: true


  # Item settings /Spawner get
  item:
    # Cost of the item,
    # if you're taking it from
    # /Spawner get
    cost: 1500.0

  # Restrict normal spawners, which are no upgradeable spawners, or other stuff like using eggs on spawners.
  vanilla:
    # Allow the placing of normal spawners?
    placing: true
    # Allow changing the entity type of the spawner with a spawn egg?
    egg: false
    # Should vanilla spawners be converted into upgradeable spawners when a player interacts with them?
    # NOTE: It is not possible to convert vanilla spawners without player interaction since the server does not
    # provide a way to indentify the owner without interaction.
    claim:
      enabled_2: true
      # Should the convert be allowed, even if the player reached his maximum amount of upgradeable spawners?
      ignore-max: false
      # Should spawners that spawn be converted? Please can claim it later and
      # the spawner owner will be set to this player.
      on-spawn: false

  # Teleportation settings (/Spawners list)
  # Permission: uspawners.teleport
  teleportation:
    # Set teleportation cost.
    cost_2: 200

  # Default settings. These only apply to new spawner creations.
  # Available: BUTCHER
  default-settings_list: []

  # Set amount of experience drops, if an entity dies that has been spawned by an upgradeable spawner.
  # Use -1 to disable this option.
  xp-drop: 20


# Hologram above the spawner to show stats about the levels and entity type.
hologram:
  # This setting requires server reload / restart.
  enabled_3: true
  # Only show the hologram, if the spawner is paused?
  only-paused: true
  # Y offset - adjust the height
  offset: 0


protection:
  # Protect spawners against explosives?
  # If disabled, they will drop at a explosion.
  anti-explosive: false


# Limit Upgradeable Spawners
limit:
  # Set the maximum amount of upgradeable spawners in one chunk.
  # Disable: 0
  max-per-chunk: 4
  # Should spawned entities from an upgradeable spawner have AI?
  # If set to false, these entities will not move, but will still be pushed by water.
  # This helps to improve server performance.
  # NOTE: This setting requires server reload / restart.
  # If you use WildStacker, disable AI in their config instead.
  no-ai: false

  # Set area limits
  area:
    # Set the radius of chunks to be checked around the spawner.
    # 0 = only the chunk, the spawner is located in (not recommended)
    # 1 =
    #     xxx  x = chunk
    #     xsx  s = chunk in which the spawner is located.
    #     xxx
    chunk-radius: 2
    # Set the max entity limit for the area. This only includes entities spawned by this ugradeablespawners.
    # If this limit is reached, all upgradeable spawners in this area will be paused until
    # there are less upgradebale spawner entities again.
    # This does only take entities into account that were spawned by an upgradeable spawner.
    # Disable: 0
    max-entities: 250

  # Set period of the period-amount upgrade.
  # The period amount-upgrade can be disabled by disabling the menu item and setting the period time to 0.
  # Disable menu items: https://github.com/Angeschossen/General/wiki/GUI-Menus#disable-items
  period:
    # Set the time of the period.
    # Example: Allow the spawner to spawn x entities every 1 hour.
    # The max amount of entities per period can be upgraded per spawner. Providing a useful upgrade and performance improvement at the same time.
    # Timeunits: d, h, m, s
    time_time: 5s




# Economy settings
economy:
  # If all types are disabled, the item based economy will be used instead.
  type:
    # Vault: You need an economy plugin, which supports Vault, to let this work.
    vault: true
    # Use experience Levels as economy?
    exp-levels: false

# 3rd party plugin integrations
integration:
  lands:
    # Should players be allowed to place spawners only in claimed areas where they're trusted?
    only-claimed: false
    # Supports: Lands (https://www.spigotmc.org/resources/53313), SuperiorSkyblock2, BentoBox
    # Allow players, which are trusted in the region where the
    # farm is located in, to break blocks, place blocks and
    # interact, if they're allowed to do so in the region?
    allow-region-members: true

logging:
  # Should UpgradeableSpawners log cancellations of events. This happens if 3rd party plugins cancel these events.
  # By having this option enabled, you can always check if a 3rd party plugin cancelled a spawn for example.
  api-events: false

